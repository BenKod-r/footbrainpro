### ‚úÖ deploy_on_main_push.yml : build & push image Docker en production (tag = `latest`)
name: üöÄ Deploy to Prod on merge to main

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üß± Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üõ†Ô∏è Build and Push Prod Image
        run: |
          # Build & push via Docker Compose
          docker compose -f compose.prod.yaml build
          docker tag footbrainpro_app:latest ${{ secrets.DOCKER_USERNAME }}/footbrainpro:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/footbrainpro:latest

      - name: üöÄ Deploy to PROD via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/footbrainpro:latest
            sudo docker-compose up -d --remove-orphans
            sleep 10

            # R√©cup√®re le nom du conteneur
            CONTAINER_FOOTBRAINPRO=$(sudo docker ps --filter ancestor=${{ secrets.DOCKER_USERNAME }}/footbrainpro:latest --format "{{.Names}}" | head -n 1)

            # Nettoyage du cache (dev)
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console cache:clear

            # Installation des d√©pendances front
            sudo docker exec $CONTAINER_FOOTBRAINPRO npm install

            # Cr√©ation de la BDD si non existante
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console doctrine:database:create --if-not-exists

            # Migration de la base de donn√©es (prod)
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console doctrine:migrations:migrate --no-interaction --env=prod

            # Suppression des assets obsol√®tes
            sudo docker exec $CONTAINER_FOOTBRAINPRO rm -rf public/assets

            # Installation d'importmap
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console importmap:install

            # Compilation des styles SCSS
            sudo docker exec $CONTAINER_FOOTBRAINPRO sass assets/styles/app.scss:assets/styles/app.css

            # Compilation de asset-map
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console asset-map:compile

            # Nettoyage du cache (prod)
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console cache:clear --env=prod

            # Pr√©chauffage du cache (prod)
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console cache:warmup --env=prod

            # Nettoyage du cache Doctrine
            sudo docker exec $CONTAINER_FOOTBRAINPRO php bin/console doctrine:cache:clear-metadata --env=prod
